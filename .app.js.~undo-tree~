"6cdc503a0281045c29f8fa495c0f4e94a56bdbd7"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((1331 . 1336) (t 23086 63295 648331 927000)) nil (23086 63387 995691 79000) 0 nil]) ((1348 . 1372) (#("      console.log(myUrl);
" 0 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-4-face)) 18 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-4-face)) 24 25 (fontified t) 25 26 (fontified t)) . 1348) (undo-tree-id214 . -26) (undo-tree-id215 . -26) (undo-tree-id216 . 1) (undo-tree-id217 . 2) (undo-tree-id218 . 2) (undo-tree-id219 . -24) (undo-tree-id220 . -24) (undo-tree-id221 . -24) (undo-tree-id222 . -26)) nil (23086 63295 611976 827000) 0 nil]) ((1368 . 1373) (#("u" 0 1 (fontified t)) . -1368) (undo-tree-id223 . -1) (#("r" 0 1 (fontified t)) . -1369) (undo-tree-id224 . -1) 1370 (1354 . 1370) (1347 . 1354) (t 23086 63242 82384 265000) 1326) nil (23086 63295 611983 369000) 0 nil]) ((1259 . 1348) (#("    const myUrl = url.parse(req.url);
  if (!req.session.loggedIn && myUrl !== '/login') {
" 0 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 15 (fontified t face font-lock-variable-name-face) 15 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-3-face)) 36 37 (fontified t) 37 38 (fontified t) 38 40 (fontified t) 40 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-3-face)) 44 45 (fontified t) 45 79 (fontified t) 79 87 (fontified t face font-lock-string-face) 87 88 (fontified t face (rainbow-delimiters-depth-3-face)) 88 89 (fontified t) 89 90 (fontified t face (rainbow-delimiters-depth-3-face)) 90 91 (fontified t)) . 1259) (undo-tree-id167 . -91) (undo-tree-id168 . -91) (undo-tree-id169 . -38) (undo-tree-id170 . -38) (undo-tree-id171 . 4) (undo-tree-id172 . -21) (undo-tree-id173 . -40) (undo-tree-id174 . -60) (undo-tree-id175 . -21) (undo-tree-id176 . 5) (undo-tree-id177 . 5) (undo-tree-id178 . -86) (undo-tree-id179 . -86) (undo-tree-id180 . -86) (undo-tree-id181 . -91) (640 . 668) (#("const url = require('url');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (rainbow-delimiters-depth-1-face)) 26 27 (fontified t) 27 28 (fontified t)) . 640) (undo-tree-id182 . -28)) nil (23086 63242 55450 191000) 0 nil]) ((1338 . 1346) (1324 . 1338)) nil (23086 63242 55454 380000) 0 nil]) ((1286 . 1296)) nil (23086 63242 55455 684000) 0 nil]) ((1281 . 1282) (#("P" 0 1 (fontified t)) . -1281) (undo-tree-id183 . -1) 1282 (1284 . 1286) (1263 . 1284) (#("l" 0 1 (fontified t)) . -1263) (undo-tree-id184 . -1) (#("e" 0 1 (fontified t)) . -1264) (undo-tree-id185 . -1) 1265 (1263 . 1265) (1259 . 1263) (1259 . 1260) 1261) nil (23086 63242 55461 587000) 0 nil]) ((#("
" 0 1 (fontified t)) . -667) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 668 (667 . 668) 662) nil (23086 63242 55468 788000) 0 nil]) ((#("j" 0 1 (fontified t)) . -691) (undo-tree-id189 . -1) (#("j" 0 1 (fontified t)) . -692) (undo-tree-id190 . -1) (#("j" 0 1 (fontified t)) . -693) (undo-tree-id191 . -1) 694 (691 . 694) (#("
" 0 1 (fontified t)) . -691) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 692 (691 . 692) 690) nil (23086 63242 55476 472000) 0 nil]) ((#("
" 0 1 (fontified t)) . -667) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 668 (667 . 668) 666) nil (23086 63242 55480 488000) 0 nil]) ((659 . 667) (#("*" 0 1 (fontified t)) . -659) (undo-tree-id198 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -660) (undo-tree-id199 . -1) 661 (659 . 661) (#(" " 0 1 (fontified t)) . -659) (undo-tree-id200 . -1) 660 (640 . 660) (#("r" 0 1 (fontified t)) . -640) (undo-tree-id201 . -1) (#("e" 0 1 (fontified t)) . -641) (undo-tree-id202 . -1) 642 (640 . 642) (639 . 640) 581) nil (23086 63242 55487 478000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1262) (undo-tree-id203 . 1) (undo-tree-id204 . -1) (undo-tree-id205 . -1)) nil (23086 63242 55491 169000) 0 nil]) ((#("      " 0 6 (fontified t)) . -1262) (undo-tree-id206 . -6) 1268 (1261 . 1268) 1259) nil (23086 63242 55493 145000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1230) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#(" " 0 1 (fontified t)) . -1231) (undo-tree-id210 . -1) (#(" " 0 1 (fontified t)) . -1232) (undo-tree-id211 . -1) (#(" " 0 1 (fontified t)) . -1233) (undo-tree-id212 . -1) (#(" " 0 1 (fontified t)) . -1234) (undo-tree-id213 . -1) 1235 (1231 . 1235) (1231 . 1232) 1257 (t 23086 62911 813465 950000)) nil (23086 63242 55503 782000) 0 nil]) ((1055 . 1141) (#("session({
  secret: \"123456\",
  resave: false,
  saveUninitialized: true
})
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-2-face)) 8 9 (fontified t face (rainbow-delimiters-depth-3-face)) 9 20 (fontified t) 20 28 (fontified t face font-lock-string-face) 28 40 (fontified t) 40 45 (fontified t face font-lock-constant-face) 45 68 (fontified t) 68 72 (fontified t face font-lock-constant-face) 72 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-3-face)) 74 75 (fontified t face (rainbow-delimiters-depth-2-face)) 75 76 (fontified t)) . 1055) (undo-tree-id153 . -76) (undo-tree-id154 . -76) (undo-tree-id155 . -73) (undo-tree-id156 . -73) (undo-tree-id157 . -47) (undo-tree-id158 . -47) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -30) (undo-tree-id162 . -30) (undo-tree-id163 . -76) (undo-tree-id164 . -76) (undo-tree-id165 . -76) (undo-tree-id166 . -76)) nil (23086 62911 753995 402000) 0 nil]) ((1046 . 1133)) nil (23086 62911 753999 377000) 0 nil]) ((1045 . 1046) (t 23086 62739 945745 644000) 1040) nil (23086 62911 754001 42000) 0 nil]) ((221 . 265) (#("const session = require('express-session');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 13 (fontified t face font-lock-variable-name-face) 13 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 41 (fontified t face font-lock-string-face) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 43 (fontified t) 43 44 (fontified t)) . 221) (undo-tree-id122 . -44) (undo-tree-id123 . -44) (undo-tree-id124 . 1) (undo-tree-id125 . 2) (undo-tree-id126 . 2) (undo-tree-id127 . -42) (undo-tree-id128 . -42) (undo-tree-id129 . -42) (undo-tree-id130 . -44)) nil (23086 62739 923741 467000) 0 nil]) ((259 . 264) (258 . 259) (237 . 258) (#("e" 0 1 (fontified t)) . -237) (undo-tree-id131 . -1) (#("x" 0 1 (fontified t)) . -238) (undo-tree-id132 . -1) (#("p" 0 1 (fontified t)) . -239) (undo-tree-id133 . -1) (#("r" 0 1 (fontified t)) . -240) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t)) . -241) (undo-tree-id135 . -1) (#("s" 0 1 (fontified t)) . -242) (undo-tree-id136 . -1) (#("s" 0 1 (fontified t)) . -243) (undo-tree-id137 . -1) (#("-" 0 1 (fontified t)) . -244) (undo-tree-id138 . -1) (#("s" 0 1 (fontified t)) . -245) (undo-tree-id139 . -1) (#("e" 0 1 (fontified t)) . -246) (undo-tree-id140 . -1) (#("s" 0 1 (fontified t)) . -247) (undo-tree-id141 . -1) (#("s" 0 1 (fontified t)) . -248) (undo-tree-id142 . -1) (#("i" 0 1 (fontified t)) . -249) (undo-tree-id143 . -1) (#("o" 0 1 (fontified t)) . -250) (undo-tree-id144 . -1) (#("n" 0 1 (fontified t)) . -251) (undo-tree-id145 . -1) 252 (240 . 252) (227 . 240) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -227) (undo-tree-id146 . -1) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -228) (undo-tree-id147 . -1) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -229) (undo-tree-id148 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -230) (undo-tree-id149 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -231) (undo-tree-id150 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -232) (undo-tree-id151 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -233) (undo-tree-id152 . -1) 234 (221 . 234) (220 . 221) (t 23086 62660 856788 800000) 180) nil (23086 62739 923767 562000) 0 nil]) ((#("(req, res, next)" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-2-face))) . 1197) (undo-tree-id114 . 1) (undo-tree-id115 . -16) (undo-tree-id116 . -14) (undo-tree-id117 . -16) (undo-tree-id118 . -16) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -7) 1204 (t 23086 62435 866395 212000)) nil (23086 62660 834086 661000) 0 nil]) ((1198 . 1212) (t 23086 62273 585147 515000)) nil (23086 62435 838959 679000) 0 nil]) ((#("req, res, next" 0 14 (fontified t)) . 1198) (undo-tree-id113 . -6) 1204 (t 23086 62031 504843 728000)) nil (23086 62273 527529 195000) 0 nil]) ((1208 . 1212) (#("r" 0 1 (fontified t)) . -1208) (undo-tree-id110 . -1) 1209 (1202 . 1209) (#("r" 0 1 (fontified t)) . -1202) (undo-tree-id111 . -1) (#("e" 0 1 (fontified t)) . -1203) (undo-tree-id112 . -1) 1204 (1198 . 1204) (1197 . 1199) (t 23086 61881 473317 614000)) nil (23086 62031 464007 174000) 0 nil]) ((300 . 353) (#("const verifyThem = require('./services/session.js');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 50 (fontified t face font-lock-string-face) 50 51 (fontified t face (rainbow-delimiters-depth-1-face)) 51 52 (fontified t) 52 53 (fontified t)) . 300) (undo-tree-id77 . -53) (undo-tree-id78 . -53) (undo-tree-id79 . -5) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -51) (undo-tree-id83 . -51) (undo-tree-id84 . -53) (undo-tree-id85 . -53) (undo-tree-id86 . -53)) nil (23086 61881 441050 988000) 0 nil]) ((1187 . 1199) (#("v" 0 1 (fontified t)) . -1187) (undo-tree-id87 . -1) 1188 (1187 . 1188) (1179 . 1187) (1179 . 1180)) nil (23086 61881 441056 685000) 0 nil]) ((#("
" 0 1 (fontified t)) . -894) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("a" 0 1 (fontified t)) . -895) (undo-tree-id91 . -1) (#("p" 0 1 (fontified t)) . -896) (undo-tree-id92 . -1) (#("p" 0 1 (fontified t)) . -897) (undo-tree-id93 . -1) (#("." 0 1 (fontified t)) . -898) (undo-tree-id94 . -1) (#("u" 0 1 (fontified t)) . -899) (undo-tree-id95 . -1) (#("s" 0 1 (fontified t)) . -900) (undo-tree-id96 . -1) (#("e" 0 1 (fontified t)) . -901) (undo-tree-id97 . -1) 902 (895 . 902) (894 . 895) 891) nil (23086 61881 441068 230000) 0 nil]) ((344 . 352) (338 . 344) (#("." 0 1 (fontified t face font-lock-string-face)) . -338) (undo-tree-id98 . -1) 339 (335 . 339) (314 . 335) (306 . 314)) nil (23086 61881 441072 765000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -306) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -307) (undo-tree-id100 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -308) (undo-tree-id101 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -309) (undo-tree-id102 . -1) 310 (306 . 310) (#("l" 0 1 (fontified t face font-lock-variable-name-face)) . -306) (undo-tree-id103 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -307) (undo-tree-id104 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -308) (undo-tree-id105 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -309) (undo-tree-id106 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -310) (undo-tree-id107 . -1) 311 (300 . 311) (#("l" 0 1 (fontified t)) . -300) (undo-tree-id108 . -1) (#("e" 0 1 (fontified t)) . -301) (undo-tree-id109 . -1) 302 (300 . 302) (299 . 300) 261) nil (23086 61881 441084 25000) 0 nil]) ((1349 . 1354) (#("users" 0 5 (fontified t)) . 1349)) nil (23086 61881 441087 439000) 0 nil]) ((265 . 270) (#("users" 0 5 (fontified t face font-lock-variable-name-face)) . 265) (t 23086 61604 760102 846000)) nil (23086 61881 441089 89000) 0 nil]) ((291 . 296) (#("users" 0 5 (fontified t face font-lock-string-face)) . 291) (t 23086 61392 393061 132000)) nil (23086 61604 741522 126000) 0 nil]) ((1786 . 1809) ("  res.render('error');
" . 1786) (undo-tree-id0 . -23) (1655 . 1725) (#("  res.locals.error = req.app.get('env') === 'development' ? err : {};
" 32 33 (face (rainbow-delimiters-depth-3-face)) 33 38 (face font-lock-string-face) 38 39 (face (rainbow-delimiters-depth-3-face)) 44 57 (face font-lock-string-face) 66 67 (face (rainbow-delimiters-depth-3-face)) 67 68 (face (rainbow-delimiters-depth-3-face))) . 1655) (undo-tree-id1 . -70) (1435 . 1471) (#("  var err = new Error('Not Found');
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 9 (fontified t face font-lock-variable-name-face) 9 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 21 (fontified t face font-lock-type-face) 21 22 (fontified t face (rainbow-delimiters-depth-3-face)) 22 23 (fontified t face font-lock-string-face) 23 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 36 (fontified t)) . 1435) (undo-tree-id2 . -36) (1310 . 1357) (#("app.use('/', index);
app.use('/login', users);
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 30 (fontified t face font-lock-string-face) 30 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 47 (fontified t)) . 1310) (undo-tree-id3 . -47) (1256 . 1301) (#("  require('./mongo')().then(() => next());
" 0 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-4-face)) 10 11 (fontified t face font-lock-string-face) 11 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face (rainbow-delimiters-depth-4-face)) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 22 (fontified t face (rainbow-delimiters-depth-4-face)) 22 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-4-face)) 28 29 (fontified t face (rainbow-delimiters-depth-5-face)) 29 30 (fontified t face (rainbow-delimiters-depth-5-face)) 30 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-5-face)) 39 40 (fontified t face (rainbow-delimiters-depth-5-face)) 40 41 (fontified t face (rainbow-delimiters-depth-4-face)) 41 43 (fontified t)) . 1256) (undo-tree-id4 . -43) (1233 . 1245) (#("  next();
" 0 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-4-face)) 7 8 (fontified t face (rainbow-delimiters-depth-4-face)) 8 10 (fontified t)) . 1233) (undo-tree-id5 . -10) (undo-tree-id6 . -10) (undo-tree-id7 . -10) (1127 . 1163) (#("var mongoose = require('mongoose');
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 12 (fontified t face font-lock-variable-name-face) 12 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face font-lock-string-face) 24 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 36 (fontified t)) . 1127) (undo-tree-id8 . -36) (undo-tree-id9 . -36) (undo-tree-id10 . -36) (1036 . 1122) (#("    if(!req.session.loggedIn){
	res.redirect('/login');
    } else {
	next();
    }
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 31 (fontified t) 31 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-4-face)) 45 53 (fontified t face font-lock-string-face) 53 54 (fontified t face (rainbow-delimiters-depth-4-face)) 54 56 (fontified t) 56 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t) 62 66 (fontified t face font-lock-keyword-face) 66 67 (fontified t) 67 68 (fontified t face (rainbow-delimiters-depth-3-face)) 68 69 (fontified t) 69 74 (fontified t) 74 75 (fontified t face (rainbow-delimiters-depth-4-face)) 75 76 (fontified t face (rainbow-delimiters-depth-4-face)) 76 78 (fontified t) 78 82 (fontified t) 82 83 (fontified t face (rainbow-delimiters-depth-3-face)) 83 84 (fontified t)) . 1036) (undo-tree-id11 . -31) (undo-tree-id12 . -31) (undo-tree-id13 . -69) (undo-tree-id14 . -69) (undo-tree-id15 . -84) (undo-tree-id16 . -84) (undo-tree-id17 . -78) (undo-tree-id18 . -78) (undo-tree-id19 . -56) (undo-tree-id20 . -56) (undo-tree-id21 . 1) (undo-tree-id22 . 29) (undo-tree-id23 . 16) (undo-tree-id24 . 7) (undo-tree-id25 . 2) (undo-tree-id26 . 2) (undo-tree-id27 . -82) (undo-tree-id28 . -82) (undo-tree-id29 . -82) (undo-tree-id30 . -84) (949 . 1006) (#("app.use(express.static(path.join(__dirname, 'public')));
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 16 (fontified t) 16 22 (fontified t face font-lock-keyword-face) 22 23 (fontified t face (rainbow-delimiters-depth-2-face)) 23 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 44 (fontified t) 44 52 (fontified t face font-lock-string-face) 52 53 (fontified t face (rainbow-delimiters-depth-3-face)) 53 54 (fontified t face (rainbow-delimiters-depth-2-face)) 54 55 (fontified t face (rainbow-delimiters-depth-1-face)) 55 56 (fontified t) 56 57 (fontified t)) . 949) (undo-tree-id31 . -57) (undo-tree-id32 . -57) (undo-tree-id33 . -57) (597 . 822) (#("  ['query', 'params', 'body'].forEach((key) => {
  if (req[key]) {
  var capKey = key[0].toUpperCase() + key.substr(1);
  var value = JSON.stringify(req[key], null, 2);
  console.log(`${ capKey }: ${ value }`);
  }
" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-depth-3-face)) 3 10 (fontified t face font-lock-string-face) 10 12 (fontified t) 12 20 (fontified t face font-lock-string-face) 20 22 (fontified t) 22 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 39 (fontified t face (rainbow-delimiters-depth-4-face)) 39 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-4-face)) 43 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 51 (fontified t) 51 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 55 (fontified t face (rainbow-delimiters-depth-5-face)) 55 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-6-face)) 59 62 (fontified t) 62 63 (fontified t face (rainbow-delimiters-depth-6-face)) 63 64 (fontified t face (rainbow-delimiters-depth-5-face)) 64 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-5-face)) 66 69 (fontified t) 69 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 79 (fontified t face font-lock-variable-name-face) 79 85 (fontified t) 85 86 (fontified t face (rainbow-delimiters-depth-6-face)) 86 87 (fontified t) 87 88 (fontified t face (rainbow-delimiters-depth-6-face)) 88 100 (fontified t) 100 101 (fontified t face (rainbow-delimiters-depth-6-face)) 101 102 (fontified t face (rainbow-delimiters-depth-6-face)) 102 115 (fontified t) 115 116 (fontified t face (rainbow-delimiters-depth-6-face)) 116 117 (fontified t) 117 118 (fontified t face (rainbow-delimiters-depth-6-face)) 118 122 (fontified t) 122 125 (fontified t face font-lock-keyword-face) 125 126 (fontified t) 126 131 (fontified t face font-lock-variable-name-face) 131 148 (fontified t) 148 149 (fontified t face (rainbow-delimiters-depth-6-face)) 149 152 (fontified t) 152 153 (fontified t face (rainbow-delimiters-depth-7-face)) 153 156 (fontified t) 156 157 (fontified t face (rainbow-delimiters-depth-7-face)) 157 159 (fontified t) 159 163 (fontified t face font-lock-constant-face) 163 166 (fontified t) 166 167 (fontified t face (rainbow-delimiters-depth-6-face)) 167 182 (fontified t) 182 183 (fontified t face (rainbow-delimiters-depth-6-face)) 183 208 (fontified t face font-lock-string-face) 208 209 (fontified t face (rainbow-delimiters-depth-6-face)) 209 213 (fontified t) 213 214 (fontified t face (rainbow-delimiters-depth-5-face)) 214 215 (fontified t)) . 597) (undo-tree-id34 . -49) (undo-tree-id35 . -49) (undo-tree-id36 . -67) (undo-tree-id37 . -67) (undo-tree-id38 . -120) (undo-tree-id39 . -120) (undo-tree-id40 . -169) (undo-tree-id41 . -169) (undo-tree-id42 . -211) (undo-tree-id43 . -211) (undo-tree-id44 . -215) (undo-tree-id45 . -215) (undo-tree-id46 . -215) (543 . 567) (#("app.use(logger('dev'));
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-2-face)) 15 20 (fontified t face font-lock-string-face) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 24 (fontified t)) . 543) (undo-tree-id47 . -24) (undo-tree-id48 . -24) (undo-tree-id49 . -24) (344 . 424) (#("app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'hbs');
" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-1-face)) 8 15 (fontified t face font-lock-string-face) 15 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-2-face)) 27 38 (fontified t) 38 45 (fontified t face font-lock-string-face) 45 46 (fontified t face (rainbow-delimiters-depth-2-face)) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 56 (fontified t) 56 57 (fontified t face (rainbow-delimiters-depth-1-face)) 57 70 (fontified t face font-lock-string-face) 70 72 (fontified t) 72 77 (fontified t face font-lock-string-face) 77 78 (fontified t face (rainbow-delimiters-depth-1-face)) 78 80 (fontified t)) . 344) (undo-tree-id50 . -49) (undo-tree-id51 . -49) (undo-tree-id52 . -80) (undo-tree-id53 . -80) (undo-tree-id54 . -80) (222 . 300) (#("var index = require('./routes/index');
var users = require('./routes/users');
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-variable-name-face) 9 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 36 (fontified t face font-lock-string-face) 36 37 (fontified t face (rainbow-delimiters-depth-1-face)) 37 39 (fontified t) 39 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t) 43 48 (fontified t face font-lock-variable-name-face) 48 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-1-face)) 59 75 (fontified t face font-lock-string-face) 75 76 (fontified t face (rainbow-delimiters-depth-1-face)) 76 78 (fontified t)) . 222) (undo-tree-id55 . -39) (undo-tree-id56 . -39) (undo-tree-id57 . -78) (undo-tree-id58 . -78) (undo-tree-id59 . -78) (1 . 221) (#("var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 11 (fontified t face font-lock-variable-name-face) 11 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 31 (fontified t face font-lock-string-face) 31 32 (fontified t face (rainbow-delimiters-depth-1-face)) 32 34 (fontified t) 34 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 42 (fontified t face font-lock-variable-name-face) 42 52 (fontified t) 52 53 (fontified t face (rainbow-delimiters-depth-1-face)) 53 59 (fontified t face font-lock-string-face) 59 60 (fontified t face (rainbow-delimiters-depth-1-face)) 60 62 (fontified t) 62 65 (fontified t face font-lock-keyword-face) 65 66 (fontified t) 66 73 (fontified t face font-lock-variable-name-face) 73 83 (fontified t) 83 84 (fontified t face (rainbow-delimiters-depth-1-face)) 84 99 (fontified t face font-lock-string-face) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 102 (fontified t) 102 105 (fontified t face font-lock-keyword-face) 105 106 (fontified t) 106 112 (fontified t face font-lock-variable-name-face) 112 122 (fontified t) 122 123 (fontified t face (rainbow-delimiters-depth-1-face)) 123 131 (fontified t face font-lock-string-face) 131 132 (fontified t face (rainbow-delimiters-depth-1-face)) 132 134 (fontified t) 134 137 (fontified t face font-lock-keyword-face) 137 138 (fontified t) 138 150 (fontified t face font-lock-variable-name-face) 150 160 (fontified t) 160 161 (fontified t face (rainbow-delimiters-depth-1-face)) 161 176 (fontified t face font-lock-string-face) 176 177 (fontified t face (rainbow-delimiters-depth-1-face)) 177 179 (fontified t) 179 182 (fontified t face font-lock-keyword-face) 182 183 (fontified t) 183 193 (fontified t face font-lock-variable-name-face) 193 203 (fontified t) 203 204 (fontified t face (rainbow-delimiters-depth-1-face)) 204 217 (fontified t face font-lock-string-face) 217 218 (fontified t face (rainbow-delimiters-depth-1-face)) 218 220 (fontified t)) . 1) (undo-tree-id60 . -34) (undo-tree-id61 . -34) (undo-tree-id62 . -62) (undo-tree-id63 . -62) (undo-tree-id64 . -102) (undo-tree-id65 . -102) (undo-tree-id66 . -134) (undo-tree-id67 . -134) (undo-tree-id68 . -179) (undo-tree-id69 . -179) (undo-tree-id70 . -220) (undo-tree-id71 . -220) (undo-tree-id72 . -220)) nil (23086 61392 370819 657000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -1108) (1108 . 1109) (#("	" 0 1 (fontified nil)) . 1108) (undo-tree-id73 . -1) (1104 . 1108) (1105 . 1106) (1103 . 1105) (1096 . 1103) (1094 . 1096) (1087 . 1094) (#("	" 0 1 (fontified nil)) . -1086) (1086 . 1087) (#("	" 0 1 (fontified nil)) . 1086) (undo-tree-id74 . -1) (1082 . 1086) (1083 . 1084) (1081 . 1083) (1073 . 1081) (1058 . 1073) (1056 . 1058) (1052 . 1056) (#("i" 0 1 (fontified t)) . -1052) (undo-tree-id75 . -1) 1053 (1045 . 1053) (1030 . 1045) (1026 . 1030) (1026 . 1027) 1028) nil (23086 61392 370834 360000) 0 nil]) ((1027 . 1029) (#("    " 0 4 (fontified nil)) . -1026) (undo-tree-id76 . -4) (1030 . 1031) (1025 . 1030) (1022 . 1025) (1017 . 1022) (996 . 1017) (995 . 996) (t 23086 52197 592365 89000) 939) nil (23086 61392 370840 33000) 0 nil]) nil nil (23086 61392 370841 231000) 0 nil] #1# 5301 34 nil]