"53b0ba2232299a43c7772b207660bcaaa8e57eab"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("s" 0 1 (fontified t face font-lock-variable-name-face)) . 271) (t 23087 7167 108755 821000)) nil (23087 7193 795016 432000) 0 nil]) ((#("s" 0 1 (fontified t)) . 549) (t 23087 7142 289014 683000)) nil (23087 7167 86436 189000) 0 nil]) ((#("s" 0 1 (fontified t)) . 588)) nil (23087 7142 256106 461000) 0 nil]) ((#("s" 0 1 (fontified t)) . 512)) nil (23087 7142 256110 158000) 0 nil]) ((#("s" 0 1 (fontified t)) . 495)) nil (23087 7142 256111 795000) 0 nil]) ((#("s" 0 1 (fontified t)) . 419) (t 23087 7058 786528 260000)) nil (23087 7142 256113 198000) 0 nil]) ((591 . 592) (t 23087 7022 170220 148000)) nil (23087 7058 746228 796000) 0 nil]) ((486 . 528) (#("      secretsArray[i] = secretsArray[i][0];
" 0 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-4-face)) 19 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-4-face)) 21 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-4-face)) 37 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-4-face)) 39 40 (fontified t face (rainbow-delimiters-depth-4-face)) 40 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-4-face)) 42 43 (fontified t) 43 44 (fontified t)) . 486) (undo-tree-id44 . -44) (undo-tree-id45 . -44) (undo-tree-id46 . 1) (undo-tree-id47 . 2) (undo-tree-id48 . 2) (undo-tree-id49 . -42) (undo-tree-id50 . -42) (undo-tree-id51 . -42) (undo-tree-id52 . -44)) nil (23087 7022 138371 287000) 0 nil]) ((528 . 529)) nil (23087 7022 138375 704000) 0 nil]) ((525 . 528) (513 . 525) (492 . 513) (486 . 492) (486 . 487) 488 (t 23087 6881 938174 203000)) nil (23087 7022 138378 226000) 0 nil]) ((519 . 559) (#("    res.render(\"index\", {secretArray});
" 0 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-3-face)) 15 22 (fontified t face font-lock-string-face) 22 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-4-face)) 25 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-4-face)) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 40 (fontified t)) . 519) (undo-tree-id0 . -40) (undo-tree-id1 . -40) (undo-tree-id2 . 3) (undo-tree-id3 . 4) (undo-tree-id4 . 4) (undo-tree-id5 . -36) (undo-tree-id6 . -36) (undo-tree-id7 . -36) (undo-tree-id8 . -40) (478 . 486) (#("    })
" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-5-face)) 5 6 (fontified t face (rainbow-delimiters-depth-4-face)) 6 7 (fontified t)) . 478) (undo-tree-id9 . -7) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (359 . 409) (#("  for(let i = 0; i < user.secrets.length; i++){
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-variable-name-face) 11 45 (fontified t) 45 46 (fontified t face (rainbow-delimiters-depth-3-face)) 46 47 (fontified t face (rainbow-delimiters-depth-3-face)) 47 48 (fontified t)) . 359) (undo-tree-id12 . -48) (undo-tree-id13 . -48) (undo-tree-id14 . -48) (284 . 338) (#("  user = await User.findById(req.session.userId, {})
" 0 28 (fontified t) 28 29 (fontified t face (rainbow-delimiters-depth-3-face)) 29 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face)) 50 51 (fontified t face (rainbow-delimiters-depth-4-face)) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t)) . 284) (undo-tree-id15 . -53) (undo-tree-id16 . -53) (undo-tree-id17 . -53) (66 . 104) (#("const models = require('../models/');
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-variable-name-face) 12 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (rainbow-delimiters-depth-1-face)) 36 38 (fontified t)) . 66) (undo-tree-id18 . -38) (undo-tree-id19 . -38) (undo-tree-id20 . -26) (undo-tree-id21 . -26) (undo-tree-id22 . -26) (undo-tree-id23 . -26) (undo-tree-id24 . -26) (undo-tree-id25 . -26) (undo-tree-id26 . -26) (undo-tree-id27 . -26) (undo-tree-id28 . -26) (undo-tree-id29 . -26) (undo-tree-id30 . -26) (undo-tree-id31 . -26) (undo-tree-id32 . -26) (undo-tree-id33 . -26) (undo-tree-id34 . -26) (undo-tree-id35 . -26) (undo-tree-id36 . -26) (undo-tree-id37 . -26) (undo-tree-id38 . -26) (undo-tree-id39 . -26) (undo-tree-id40 . -26) (undo-tree-id41 . -26) (undo-tree-id42 . -26) (undo-tree-id43 . -38)) nil (23087 6881 884896 301000) 0 nil]) ((544 . 552) (538 . 544) (517 . 519) (535 . 536) (t 23087 6746 455925 734000)) nil (23087 6881 884901 787000) 0 nil]) nil nil (23087 6881 884902 933000) 0 nil] #1# 948 12 nil]