"148abccd37adb3a054c9aeb8dc3f7d51854248be"
[cl-struct-undo-tree [nil ([nil ([nil ([nil (#1=[nil nil ((#("
" 0 1 (fontified t)) . 234) (undo-tree-id15 . -1) (157 . 231) (#("  return mongoose.connect(`mongodb://${ config.host }/${ config.database }`);
" 0 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 25 (fontified t) 25 26 (fontified t face (rainbow-delimiters-depth-2-face)) 26 75 (fontified t face font-lock-string-face) 75 76 (fontified t face (rainbow-delimiters-depth-2-face)) 76 78 (fontified t)) . 157) (undo-tree-id16 . -78) (undo-tree-id17 . -78) (undo-tree-id18 . -78) (1 . 131) (#("var mongoose = require('mongoose');
var env = process.env.NODE_ENV || 'development';
var config = require('./config/mongo')[env];
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 12 (fontified t face font-lock-variable-name-face) 12 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (rainbow-delimiters-depth-1-face)) 34 35 (fontified t) 35 36 (fontified t rear-nonsticky t) 36 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 43 (fontified t face font-lock-variable-name-face) 43 70 (fontified t) 70 83 (fontified t face font-lock-string-face) 83 84 (fontified t) 84 85 (fontified t) 85 88 (fontified t face font-lock-keyword-face) 88 89 (fontified t) 89 95 (fontified t face font-lock-variable-name-face) 95 105 (fontified t) 105 106 (fontified t face (rainbow-delimiters-depth-1-face)) 106 122 (fontified t face font-lock-string-face) 122 123 (fontified t face (rainbow-delimiters-depth-1-face)) 123 124 (fontified t face (rainbow-delimiters-depth-1-face)) 124 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-1-face)) 128 130 (fontified t)) . 1) (undo-tree-id19 . -130) (undo-tree-id20 . -130) (undo-tree-id21 . -85) (undo-tree-id22 . -85) (undo-tree-id23 . -36) (undo-tree-id24 . -36) (undo-tree-id25 . -36) (undo-tree-id26 . -36) (undo-tree-id27 . -36) (undo-tree-id28 . -36) (undo-tree-id29 . -36) (undo-tree-id30 . -36) (undo-tree-id31 . -36) (undo-tree-id32 . -36) (undo-tree-id33 . -36) (undo-tree-id34 . 94) (undo-tree-id35 . -36) (undo-tree-id36 . -36) (undo-tree-id37 . -36) (undo-tree-id38 . -84) (undo-tree-id39 . 94) (undo-tree-id40 . 94) (undo-tree-id41 . -36) (undo-tree-id42 . -36) (undo-tree-id43 . -36) (undo-tree-id44 . -130)) nil (23086 62868 331461 282000) 0 nil]) ((#("router.get('/', function(req, res, next) {
" 0 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-1-face)) 11 14 (fontified t face font-lock-string-face) 14 16 (fontified t) 16 24 (fontified t face font-lock-keyword-face) 24 25 (fontified t face (rainbow-delimiters-depth-2-face)) 25 28 (fontified t face font-lock-variable-name-face) 28 30 (fontified t) 30 33 (fontified t face font-lock-variable-name-face) 33 35 (fontified t) 35 39 (fontified t face font-lock-variable-name-face) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 41 (fontified t) 41 42 (fontified t js--pstate ((nil 1 function 53 t nil) (nil -2305843009213693952 toplevel nil nil nil)) face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t)) . 37) (undo-tree-id45 . -43) (undo-tree-id46 . -43) (undo-tree-id47 . -43) (undo-tree-id48 . -43) (undo-tree-id49 . -43) (undo-tree-id50 . -43) (undo-tree-id51 . -43) (undo-tree-id52 . -43) (undo-tree-id53 . -43) (t 23086 62856 117539 735000)) nil (23086 62868 331471 139000) 0 nil]) ((#("  if (!req.session.loggedIn) {
    res.redirect('/login');
  }
" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-3-face)) 6 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-3-face)) 28 29 (fontified t) 29 30 (fontified t face (rainbow-delimiters-depth-3-face)) 30 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-4-face)) 48 56 (fontified t face font-lock-string-face) 56 57 (fontified t face (rainbow-delimiters-depth-4-face)) 57 61 (fontified t) 61 62 (fontified t face (rainbow-delimiters-depth-3-face)) 62 63 (fontified t)) . 80) (undo-tree-id0 . -63) (undo-tree-id1 . -63) (undo-tree-id2 . -59) (undo-tree-id3 . -59) (undo-tree-id4 . -31) (undo-tree-id5 . -31) (undo-tree-id6 . -62) (undo-tree-id7 . -62) (undo-tree-id8 . -62) (undo-tree-id9 . -62) (undo-tree-id10 . -10) (undo-tree-id11 . -62) (undo-tree-id12 . -63) (undo-tree-id13 . -10) (undo-tree-id14 . -62) 142) nil (23086 62856 73810 253000) 0 nil]) ((nil rear-nonsticky nil 36 . 37) (#("
" 0 1 (fontified nil)) . -142) (36 . 143) 1 (t 23086 52197 595698 371000)) nil (23086 62856 73814 843000) 0 nil]) nil nil (23086 62856 73816 190000) 0 nil] #1# 860 4 nil]